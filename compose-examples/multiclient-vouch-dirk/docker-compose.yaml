version: "3.7"

x-logging: &logging
  logging:
    driver: "json-file"
    options:
      max-file: "10"
      max-size: "100m"

services:
  stereum-init:
    image: stereum/init:buster
    restart: "no"
    volumes:
      - ./data/grafana:/mnt/grafana
      - ./data/sigmaprime/lighthouse:/mnt/lighthouse
      - ./data/sigmaprime/slasher:/mnt/slasher
    <<: *logging

  geth:
    container_name: geth
    image: ethereum/client-go:${GETH_DOCKER_TAG}
    restart: unless-stopped
    command: --http --http.port=8545 --http.addr=0.0.0.0 --http.vhosts="*" --allow-insecure-unlock --http.api="db,eth,net,web3,personal"
    stop_grace_period: 5m
    ports:
      - 31303:30303/tcp
      - 31303:30303/udp
      - 127.0.0.1:8545:8545
      - 127.0.0.1:8546:8546
      - 127.0.0.1:8547:8547
    volumes:
      - ./data/geth:/root/.ethereum
    networks:
      - n_bridge
    <<: *logging

  prysm_beacon:
    container_name: prysm_beacon
    image: gcr.io/prysmaticlabs/prysm/beacon-chain:${PRYSM_DOCKER_TAG}
    restart: unless-stopped
    command: --config-file=/config/beacon.yaml
    volumes:
      - ./config/prysm/beacon.yaml:/config/beacon.yaml:ro
      - ./data/prysm/beacon:/data
    ports:
      - ${BEACON_API_IP}:4000:4000
      - ${BEACON_API_IP}:8900:8080
      - 13000:13000/tcp
      - 12000:12000/udp
    networks:
      - n_vouch_beacons
      - n_bridge
    <<: *logging

  prysm_beacon_slasher:
    container_name: prysm_beacon_slasher
    image: gcr.io/prysmaticlabs/prysm/beacon-chain:${PRYSM_DOCKER_TAG}
    restart: unless-stopped
    command: --config-file=/config/beacon.yaml
    volumes:
      - ./config/prysm/slasher/beacon.yaml:/config/beacon.yaml:ro
      - ./data/prysm/beacon-slasher:/data
    ports:
      - ${BEACON_API_IP}:4001:4000
      - ${BEACON_API_IP}:8901:8080
      - 13001:13000/tcp
      - 12001:12000/udp
    networks:
      - n_vouch_beacons
      - n_bridge
      - n_slasher_beacon
    <<: *logging

  prysm_slasher:
    container_name: prysm_slasher
    image: gcr.io/prysmaticlabs/prysm/slasher:${PRYSM_SLASHER_DOCKER_TAG}
    restart: unless-stopped
    hostname: slasher
    depends_on:
      - prysm_beacon_slasher
    command: --config-file=/config/slasher.yaml
    volumes:
      - ./config/prysm/slasher/slasher.yaml:/config/slasher.yaml:ro
      - ./data/prysm/slasher:/data
    ports:
      - ${BEACON_API_IP}:8902:8680
    networks:
      - n_slasher_beacon
    <<: *logging

  lighthouse_beacon:
    container_name: lighthouse_beacon
    image: stereum/lighthouse:${LIGHTHOUSE_DOCKER_TAG}
    user: "2000"
    depends_on:
      - stereum-init
    restart: unless-stopped
    env_file: ./config/lighthouse/beacon.env
    entrypoint: /opt/app/start/beacon.sh
    volumes:
      - ./data/sigmaprime/lighthouse:/opt/app/beacon
      - ./data/sigmaprime/slasher:/opt/app/slasher
    ports:
      - ${BEACON_API_IP}:5052:5052/tcp
      - ${BEACON_API_IP}:8910:5054
      - 9000:9000/tcp
      - 9000:9000/udp
    networks:
      - n_vouch_beacons
      - n_bridge
    <<: *logging

  teku_beacon:
    container_name: teku_beacon
    image: pegasyseng/teku:${TEKU_DOCKER_TAG}
    user: "0:0"
    restart: unless-stopped
    command: ["--config-file=/opt/teku/beacon.yaml"]
    environment:
      - "JAVA_OPTS=-Xmx8g"
    volumes:
      - ./config/teku/beacon-mc.yaml:/opt/teku/beacon.yaml:ro
      - ./data/consensys/teku:/opt/teku/data
    ports:
      - ${BEACON_API_IP}:5051:5051/tcp
      - ${BEACON_API_IP}:8920:8008
      - 9001:9001/tcp
      - 9001:9001/udp
    networks:
      - n_vouch_beacons
      - n_bridge
    <<: *logging

  vouch:
    container_name: vouch
    image: attestant/vouch:${VOUCH_DOCKER_TAG}
    restart: unless-stopped
    command: ["--base-dir=/config"]
    volumes:
      - ./config/vouch/vouch.yml:/config/vouch.yml:ro
      - ./config/vouch/certs:/config/certs:ro
    networks:
      - n_dirk_vouch
      - n_vouch_beacons
    <<: *logging
  
  dirk:
    container_name: dirk
    image: attestant/dirk:${DIRK_DOCKER_TAG}
    restart: unless-stopped
    command: ["--base-dir=/config"]
    volumes:
      - ./config/dirk/dirk.yml:/config/dirk.yml:ro
      - ./config/dirk/certs:/config/certs:ro
      - ./wallets:/wallets:ro
      - ./config/dirk/passphrases:/config/passphrases:ro
      - ./data/attestant/dirk:/data
    networks:
      - n_dirk_vouch
    <<: *logging

  prometheus:
    container_name: prometheus
    image: prom/prometheus:${PROMETHEUS_DOCKER_TAG}
    user: root # https://github.com/prometheus/prometheus/issues/5976
    restart: unless-stopped
    hostname: prometheus
    command: --storage.tsdb.retention.time=7d --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./config/prometheus/prometheus.yaml:/etc/prometheus/prometheus.yml:ro
      - ./data/prometheus:/prometheus
    networks:
      - n_grafana_prometheus
      - n_dirk_vouch
      - n_vouch_beacons
      - n_slasher_beacon
    <<: *logging

  grafana:
    container_name: grafana
    image: grafana/grafana:${GRAFANA_DOCKER_TAG}
    restart: unless-stopped
    hostname: grafana
    user: "2000"
    depends_on:
      - stereum-init
      - prometheus
    ports:
      - 127.0.0.1:3000:3000
    volumes:
      - ./config/grafana/provisioning:/etc/grafana/provisioning:ro
      - ./data/grafana:/var/lib/grafana
    networks:
      - n_grafana_prometheus
      - n_bridge
    <<: *logging

networks:
  # bridge network - this networks gets internet access!
  n_bridge:
    
  # vouch to beacons
  n_vouch_beacons:
    internal: yes
  
  # slasher to beacon:
  n_slasher_beacon:
    internal: yes
  
  # dirk to vouch
  n_dirk_vouch:
    internal: yes
  
  # grafana to prometheus
  n_grafana_prometheus:
    internal: yes

# EOF

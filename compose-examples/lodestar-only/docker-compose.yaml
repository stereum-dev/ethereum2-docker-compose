version: "3.7"

x-logging: &logging
  logging:
    driver: "json-file"
    options:
      max-file: "10"
      max-size: "100m"

services:
  stereum-init:
    image: stereum/init:buster
    restart: "no"
    volumes:
      - ./data/grafana:/mnt/grafana
    <<: *logging

  geth:
    image: ethereum/client-go:${GETH_DOCKER_TAG}
    restart: always
    hostname: geth
    command: --http --http.port=8545 --http.addr=0.0.0.0 --http.vhosts="*" --allow-insecure-unlock --http.api="db,eth,net,web3,personal"
    stop_grace_period: 5m
    ports:
      - 30303:30303/tcp
      - 30303:30303/udp
      - 127.0.0.1:8545:8545
    volumes:
      - ./data/geth:/root/.ethereum
    <<: *logging
  
  beacon:
    image: stereum/lodestar:${LODESTAR_DOCKER_TAG}
    restart: always
    hostname: beacon-chain
    depends_on:
      - geth
    command: 
      - beacon 
      - --network=mainnet 
      - --eth1.providerUrl=http://geth:8545  
      - --rootDir=/opt/app/beacon 
      - --metrics.enabled=true 
      - --metrics.serverPort=8008
      - --metrics.listenAddr=0.0.0.0 
      - --api.rest.enabled=true 
      - --api.rest.port=9596
      - --api.rest.host=0.0.0.0
    ports:
      - 30607:30607/tcp 
      - 9000:9000/udp
      - 127.0.0.1:9596:9596
      - 127.0.0.1:8008:8008
    volumes:
      - ./data/lodestar/beacon:/opt/app/beacon
    <<: *logging

  validator:
    image: stereum/lodestar:${LODESTAR_DOCKER_TAG}
    restart: always
    hostname: validator
    depends_on:
      - beacon
    command: 
      - validator 
      - --network=mainnet 
      - --server=http://beacon:9596 
      - --keystoresDir=/opt/app/keystores 
      - --secretsDir=/opt/app/secrets 
      - --validatorsDbDir=/opt/app/validator-db
      - --rootDir=/opt/app/beacon
    volumes:
      - ./data/lodestar/validator/keystores:/opt/app/keystores
      - ./data/lodestar/validator/secrets:/opt/app/secrets
      - ./data/lodestar/validator/validator-db:/opt/app/validator-db
      - ./data/lodestar/beacon:/opt/app/beacon
    <<: *logging

  prometheus:
    image: prom/prometheus:${PROMETHEUS_DOCKER_TAG}
    user: "2000" 
    restart: on-failure
    hostname: prometheus     
    command: --storage.tsdb.retention.time=7d --config.file=/etc/prometheus/prometheus.yml
    ports:
      - 127.0.0.1:9096:9090
    volumes:
      - ./config/prometheus/prometheus-l.yaml:/etc/prometheus/prometheus.yml
      - ./data/prometheus:/prometheus
    <<: *logging

  grafana:
    image: grafana/grafana:${GRAFANA_DOCKER_TAG}
    restart: on-failure
    hostname: grafana
    user: "2000"
    depends_on:
      - stereum-init
      - prometheus
    ports:
      - 127.0.0.1:3006:3000
    volumes:
      - ./config/grafana/provisioning-l:/etc/grafana/provisioning:ro
      - ./data/grafana:/var/lib/grafana
    <<: *logging

# EOF

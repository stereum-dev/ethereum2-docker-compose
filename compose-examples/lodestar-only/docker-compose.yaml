version: "3.7"

x-logging: &logging
  logging:
    driver: "json-file"
    options:
      max-file: "10"
      max-size: "100m"

services:
  stereum-init:
    image: stereum/init:buster
    restart: "no"
    volumes:
      - ./data/grafana:/mnt/grafana
      - ./data/lodestar/beacon:/mnt/beacon
      - ./data/lodestar/validator:/mnt/validator
      - ./data/prometheus:/mnt/prometheus
    <<: *logging

  geth:
    image: ethereum/client-go:${GETH_DOCKER_TAG}
    restart: always
    hostname: geth
    command: --goerli --http --http.port=8545 --http.addr=0.0.0.0 --http.vhosts="*" --allow-insecure-unlock --http.api="db,eth,net,web3,personal"
    stop_grace_period: 5m
    ports:
      - 30303:30303/tcp
      - 30303:30303/udp
      - ${BEACON_API_IP}:8545:8545
    networks:
      default:
      stereum-admin:
    volumes:
      - ./data/geth:/root/.ethereum
    <<: *logging
  
  beacon:
    image: stereum/lodestar:${LODESTAR_DOCKER_TAG}
    restart: always
    hostname: beacon-chain
    user: "2000"
    depends_on:
      - geth
      - stereum-init
    command: beacon --rcConfig /opt/app/beacon.yaml
    ports:
      - 30607:30607/tcp
      - 9000:9000/udp
      - ${BEACON_API_IP}:9596:9596
      - ${BEACON_API_IP}:8008:8008
    networks:
      default:
      stereum-admin:
    volumes:
      - ./config/lodestar/beacon.yaml:/opt/app/beacon.yaml:ro
      - ./data/lodestar/beacon:/opt/app/beacon
    <<: *logging

  validator:
    image: stereum/lodestar:${LODESTAR_DOCKER_TAG}
    restart: always
    hostname: validator
    user: "2000"
    depends_on:
      - beacon
      - stereum-init
    command: validator --rcConfig /opt/app/validator.yaml
    volumes:
      - ./config/lodestar/validator.yaml:/opt/app/validator.yaml:ro
      - ./data/lodestar/validator/keystores:/opt/app/keystores
      - ./data/lodestar/validator/secrets:/opt/app/secrets
      - ./data/lodestar/validator/validator-db:/opt/app/validator-db
      - ./data/lodestar/beacon:/opt/app/beacon
    <<: *logging

  prometheus:
    image: prom/prometheus:${PROMETHEUS_DOCKER_TAG}
    user: "2000"
    depends_on:
      - stereum-init
    restart: on-failure
    hostname: prometheus
    command: --storage.tsdb.retention.time=7d --config.file=/etc/prometheus/prometheus.yml
    ports:
      - ${BEACON_API_IP}:9090:9090
    volumes:
      - ./config/prometheus/prometheus-l.yaml:/etc/prometheus/prometheus.yml
      - ./data/prometheus:/prometheus
    <<: *logging

  grafana:
    image: grafana/grafana:${GRAFANA_DOCKER_TAG}
    restart: on-failure
    hostname: grafana
    user: "2000"
    depends_on:
      - stereum-init
      - prometheus
    ports:
      - ${BEACON_API_IP}:3000:3000
    volumes:
      - ./config/grafana/provisioning-l:/etc/grafana/provisioning:ro
      - ./data/grafana:/var/lib/grafana
      - ./config/grafana/grafana.ini:/etc/grafana/grafana.ini:ro
    environment:
      GF_RENDERING_SERVER_URL: http://renderer:8082/render
      GF_RENDERING_CALLBACK_URL: http://grafana:3000    
    <<: *logging
  
  renderer:
    image: grafana/grafana-image-renderer:${GRAFANA_IMAGE_RENDERER_TAG}
    user: "2000"
    restart: on-failure
    hostname: renderer
    environment:
      ENABLE_METRICS: 'true'
      HTTP_PORT: 8082
    <<: *logging

  node-exporter:
    image: prom/node-exporter:${PROMETHEUS_NODE_EXPORTER_DOCKER_TAG}
    user: "2000"
    hostname: node-exporter
    <<: *logging

networks:
  stereum-admin:
    internal: true
  default:

# EOF

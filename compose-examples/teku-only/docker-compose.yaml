version: "3.7"

x-logging: &logging
  logging:
    driver: "json-file"
    options:
      max-file: "10"
      max-size: "100m"

services:
  stereum-init:
    image: stereum/init:buster
    restart: "no"
    volumes:
      - ./data/grafana:/mnt/grafana
      - ./data/prometheus:/mnt/prometheus
      - ./data/consensys/teku:/mnt/teku
      - ./config/teku/beacon.yaml:/mnt/config
      - ./launchpad:/mnt/launchpad  
    <<: *logging

  geth:
    image: ethereum/client-go:${GETH_DOCKER_TAG}
    restart: always
    hostname: geth
    command: --goerli --http --http.port=8545 --http.addr=0.0.0.0 --http.vhosts="*" --allow-insecure-unlock --http.api="db,eth,net,web3,personal"
    stop_grace_period: 5m
    ports:
      - 30303:30303/tcp
      - 30303:30303/udp
      - ${BEACON_API_IP}:8545:8545
    volumes:
      - ./data/geth:/root/.ethereum
    <<: *logging

  beacon:
    image: consensys/teku:${TEKU_DOCKER_TAG}
    restart: always
    hostname: beacon-chain
    user: "2000"
    depends_on:
      - stereum-init     
      - geth
    command: --config-file=/config/beacon.yaml
    ports:
      - 9001:9001
      - ${BEACON_API_IP}:5051:5051
    volumes:
      - ./data/consensys/teku:/opt/teku/data
      - ./config/teku/beacon.yaml:/config/beacon.yaml:ro
      - ./launchpad:/launchpad
    <<: *logging

  prometheus:
    image: prom/prometheus:${PROMETHEUS_DOCKER_TAG}
    user: "2000"
    restart: on-failure
    hostname: prometheus
    depends_on:
      - stereum-init
    command: --storage.tsdb.retention.time=7d --config.file=/etc/prometheus/prometheus.yml
    ports:
      - ${BEACON_API_IP}:9090:9090
    volumes:
      - ./config/prometheus/prometheus-t.yaml:/etc/prometheus/prometheus.yml
      - ./data/prometheus:/prometheus
    <<: *logging

  grafana:
    image: grafana/grafana:${GRAFANA_DOCKER_TAG}
    restart: on-failure
    hostname: grafana
    user: "2000"
    depends_on:
      - stereum-init
      - prometheus
    ports:
      - ${BEACON_API_IP}:3000:3000
    volumes:
      - ./config/grafana/provisioning-t:/etc/grafana/provisioning:ro
      - ./data/grafana:/var/lib/grafana
    <<: *logging

# EOF
